server {
    # Don't forget to tell on which port this server listens
    listen 8080;

    {% if 'aliases' in args -%}
    # Listen on the www host
    server_name {{ args.aliases|join(" ") }};
    {%- endif -%}

    # Redirect to the non-www host (declared below)
    return 301 $scheme://{{ site }}$request_uri;
}

server {
    {% if 'default' in args and args.default == True -%}
    listen 8080 default_server;
    {%- endif %}

    # The host name to respond to
    server_name {{ site }};

    # Index file
    index index.php index.html index.htm;

    # Path for static files
    root /var/www/{{ site }};

    # Logging
    access_log /var/log/nginx/{{ site }}.access.log;
    error_log /var/log/nginx/{{ site }}.error.log notice;

    # Specify a charset
    charset utf-8;

    # Custom 404 page
    error_page 404 /404.html;

    {# TODO: Improve those tests, might cause problems with Salt 0.17+ #}
    {% if 'php' in args and args.php == True -%}
    {% if 'magento' in args and args.magento == True -%}
    location / {
        index index.html index.php;
        try_files $uri $uri/ @handler;
    }

    location ~ (/(app/|includes/|lib/|/media/downloadable/|/pkginfo/|report/config.xml|var/|errors/local.xml)|/\.git/|/\.svn/|/.hta.+) {
        deny all;
    }

    location /. {
        return 404;
    }

    location @handler {
        rewrite / /index.php;
    }

    location ~ .php/ {
        rewrite ^(.*.php)/ $1 last;
    }
    {% elif 'wordpress' in site and args.wordpress == True -%}
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    rewrite /wp-admin$ $scheme://$host$uri/ permanent;
    {%- endif %}

    location ~ \.php$ {
        set $no_cache 0;

        proxy_set_header  X-Real-IP          $remote_addr;
        proxy_set_header  X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto  $scheme;
        proxy_set_header  Host  $http_host;
        proxy_set_header  X-NginX-Proxy  true;
        fastcgi_param REMOTE_ADDR $http_x_real_ip;

        if ($request_method !~ ^(GET|HEAD)$) {
            set $no_cache 1;
        }

        if ($no_cache = 1) {
            add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
            add_header X-Microcachable "0";
        }

        if ($http_cookie ~* "_mcnc") {
            set $no_cache 1;
        }

        fastcgi_no_cache $no_cache;
        fastcgi_cache_bypass $no_cache;
        fastcgi_cache microcache;
        
        fastcgi_cache_key $host$request_uri;
        fastcgi_cache_valid 200 301 302 10m;
        fastcgi_cache_use_stale updating error timeout invalid_header http_500;
        fastcgi_pass_header Set-Cookie;
        fastcgi_pass_header Cookie;
        fastcgi_ignore_headers Cache-Control Expires Set-Cookie;

        {% if 'magento' in args and args.magento == True -%}
        if (!-e $request_filename) {
            rewrite / /index.php last;
        }
        {% endif -%}

        try_files $uri = 404;
        fastcgi_pass unix://tmp/{{ site }}.socket;
        fastcgi_index index.php;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_read_timeout 240;

        {%- if 'magento' in args and args.magento == True -%}
        fastcgi_param MAGE_RUN_CODE default;
        fastcgi_param MAGE_RUN_TYPE store;
        {% elif 'wordpress' in site and args.wordpress == True -%}
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        {%- endif -%}

        include /etc/nginx/fastcgi_params;
    }

    location /phpmyadmin {
        root /usr/share/;
        index index.php index.html index.htm;

        location ~ ^/phpmyadmin/(.+\.php)$ {
            try_files $uri = 404;
            root /usr/share/;
            fastcgi_pass unix://tmp/{{ site }}.socket;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include /etc/nginx/fastcgi_params;
        }

        location ~* ^/phpmyadmin/(.+\.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt))$ {
            root /usr/share/;
        }
    }

    location /phpMyAdmin {
        rewrite ^/* /phpmyadmin last;
    }
    {% endif %}

    include /etc/nginx/custom.d/optimize.conf;
}
