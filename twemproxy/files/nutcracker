#!/bin/sh

### BEGIN INIT INFO
# Provides:          nutcracker
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:      $local_fs
# Should-Stop:       $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts nutcracker
# Description:       Starts nutcracker
### END INIT INFO

# Source function library
. /lib/lsb/init-functions

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

NAME=nutcracker
LOCKFILE=/var/lock/$NAME
PIDFILE=/var/run/$NAME.pid
DAEMON=/usr/local/bin/$NAME
DAEMON_ARGS="-d -c /etc/nutcracker/$NAME.yml -m 512 -o /var/log/nutcracker/$NAME.log -p $PIDFILE"

test -x $DAEMON || exit 0
test -r /etc/default/$NAME && . /etc/default/$NAME

start() {
    log_daemon_msg "Starting $NAME"

    test ! -d /var/log/$NAME && mkdir /var/log/$NAME

    if log_progress_msg $NAME; start-stop-daemon \
        --start --quiet --umask 007 \
        --pidfile $PIDFILE --exec $DAEMON \
        -- $DAEMON_ARGS; then
        log_end_msg 0
    else
        log_end_msg 1
        exit 1
    fi
}

stop() {
    log_daemon_msg "Stopping $NAME"

    if log_progress_msg $NAME; start-stop-daemon \
        --stop --quiet --retry forever/TERM/1 \
        --oknodo --pidfile $PIDFILE \
        --exec $DAEMON; then
        log_end_msg 0 && rm -f $LOCKFILE
    else
        log_end_msg 1
    fi
}

reload() {
    log_daemon_msg "Reloading $NAME"

    if log_progress_msg $NAME; start-stop-daemon \
        --stop --quiet --signal HUP \
        --pidfile $PIDFILE --exec $DAEMON; then
        log_end_msg 0
    else
        log_end_msg 1
    fi
}

restart() {
    stop
    sleep 1
    start
}

status() {
    status_of_proc -p $PIDFILE $DAEMON $NAME && exit 0 || exit $?
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    reload)
        reload
    ;;
    restart)
        restart
    ;;
    status)
        status
    ;;
    *)
        log_success_msg "Usage: /etc/init.d/$NAME {start|stop|status|restart|reload|}" >&2
        exit 1
    ;;
esac

exit 0
