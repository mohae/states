#!/bin/sh

### BEGIN INIT INFO
# Provides:          redis-server
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Should-Start:      $local_fs
# Should-Stop:       $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts redis-server
# Description:       Starts redis-server
### END INIT INFO

# Source function library
. /lib/lsb/init-functions

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

NAME=redis-server
DAEMON=/usr/bin/$NAME
RUNDIR=/var/run/redis

FILES=(/etc/redis/srv*.conf)
if [ -r "${FILES[0]}" ]
then
    CONFIGS=()
    for FILE in "${FILES[@]}"
    do
        NAME=${FILE#/etc/redis/}
        NAME=${NAME%.conf}

        if [ $# -ne 2 ]
        then
            CONFIGS+=($NAME)
        elif [ "srv$2" == "$NAME" ]
        then
            CONFIGS=($NAME)
            break
        fi
    done

    if [ ${#CONFIGS[@]} == 0 ];
    then
        echo "Config not exist for: $2" >&2
        exit 1
    fi
else
    echo "No config found"
    exit 1
fi

CONFIG_NUM=${#CONFIGS[@]}
for ((i=0; i < $CONFIG_NUM; i++))
do
    NAME=${CONFIGS[${i}]}
    PIDFILE="$RUNDIR/${NAME}.pid"

    start() {
        log_daemon_msg "Starting $NAME"

        test ! -d $RUNDIR && mkdir -p $RUNDIR
        touch $PIDFILE
        chown redis:redis $RUNDIR $PIDFILE
        chmod 755 $RUNDIR

        if [ -n "$ULIMIT" ]
        then
            ulimit -n $ULIMIT
        fi

        if log_progress_msg $NAME; start-stop-daemon \
            --start --quiet --umask 007 \
            --chuid redis:redis --pidfile $PIDFILE --exec $DAEMON \
            -- /etc/redis/${NAME}.conf; then
            log_end_msg 0
        else
            log_end_msg 1
            exit 1
        fi
    }

    stop() {
        log_daemon_msg "Stopping $NAME"

        if log_progress_msg $NAME; start-stop-daemon \
            --stop --quiet --retry forever/TERM/1 \
            --oknodo --pidfile $PIDFILE \
            --exec $DAEMON; then
            log_end_msg 0 && rm -f $PIDFILE
        else
            log_end_msg 1
        fi
    }

    restart() {
        ARGS=($@)
        CONFIG=${ARGS[@]:1}
        ${0} stop $CONFIG
        ${0} start $CONFIG
        exit 0
    }

    status() {
        status_of_proc -p $PIDFILE $DAEMON $NAME && exit 0 || exit $?
    }

    case "$1" in
        start)
            start
        ;;
        stop)
            stop
        ;;
        restart|force-reload)
            restart
        ;;
        status)
            status
        ;;
        *)
            log_success_msg "Usage: /etc/init.d/$NAME {start|stop|status|restart|force-reload|}" >&2
            exit 1
        ;;
    esac
done

exit 0
